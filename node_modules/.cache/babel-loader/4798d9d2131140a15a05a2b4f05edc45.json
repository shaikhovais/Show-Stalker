{"ast":null,"code":"var _jsxFileName = \"/Users/ovaishk/Programming/React Project/Movie Explorer/src/Components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchItem, setSearchItem] = useState(\"\");\n  const [showList, setShowList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const val = e.target.elements.searchBox.value;\n    console.log(\"value\", val, e);\n    setSearchItem(val);\n  } // fake the mock API\n  // sleep \n\n\n  function sleep(time) {\n    const promise = new Promise((res, rej) => {\n      setTimeout(() => res(), time);\n    });\n    return promise;\n  }\n\n  async function getTheMovies(searchTerm) {\n    await sleep(3000);\n    const url = `https://api.tvmaze.com/search/shows?q=${searchTerm}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data, \"data\");\n    setShowList(data);\n  }\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      await getTheMovies(searchItem); // 3 seconds\n\n      setLoading(false);\n    })();\n  }, [searchItem]);\n\n  function displayShowUi() {\n    return showList && (showList === null || showList === void 0 ? void 0 : showList.map(showObj => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name: \", showObj.show.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Runtime: \", showObj.show.runtime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true);\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter the TV show name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"searchBox\",\n        type: \"text\",\n        placeholder: \"ENTER THE MOVIE NAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayShowUi().length ? displayShowUi() : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"No results found\"\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading .... . .... .... .... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"HtyqoAKPLPWO8aXtqEzYOhkynn0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","App","searchItem","setSearchItem","showList","setShowList","loading","setLoading","handleSubmit","e","preventDefault","val","target","elements","searchBox","value","console","log","sleep","time","promise","Promise","res","rej","setTimeout","getTheMovies","searchTerm","url","response","fetch","data","json","displayShowUi","map","showObj","show","name","runtime","length"],"sources":["/Users/ovaishk/Programming/React Project/Movie Explorer/src/Components/App/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  \n  const [searchItem ,setSearchItem] = useState(\"\");\n  const [showList, setShowList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  function handleSubmit(e) {\n      e.preventDefault();\n\n      const val = e.target.elements.searchBox.value;\n      console.log(\"value\", val, e);\n      setSearchItem(val)\n  }\n\n  // fake the mock API\n  // sleep \n  function sleep(time) {\n      const promise = new Promise((res, rej) => {\n          setTimeout(() => res(), time)\n      })\n      return promise;\n  } \n  async function getTheMovies(searchTerm) {\n      await sleep(3000);\n      const url = `https://api.tvmaze.com/search/shows?q=${searchTerm}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data, \"data\");\n      setShowList(data);\n  }\n\n  useEffect(() => {\n      \n      (async () => {\n          setLoading(true)\n          await getTheMovies(searchItem) // 3 seconds\n          setLoading(false)\n      })();\n\n  }, [searchItem]);\n\n  function displayShowUi() {\n      return showList && showList?.map(showObj => {\n          return (\n              <>\n                  <div>Name: {showObj.show.name}</div>\n                  <div>Runtime: {showObj.show.runtime}</div>\n              </>\n          )\n      })\n  }\n\n  return (\n      <>\n          <h1>Enter the TV show name</h1>\n\n          <form onSubmit={handleSubmit}>\n              <input name=\"searchBox\" type={\"text\"} placeholder=\"ENTER THE MOVIE NAME\"/>\n              <button type=\"submit\">Submit</button>\n          </form>\n\n          {/* result list */}\n          {!loading &&<div>{displayShowUi().length ? displayShowUi() : <>No results found</>}</div>}\n          {loading && <div>Loading .... . .... .... .... </div>}\n      </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;EAEA,SAASS,YAAT,CAAsBC,CAAtB,EAAyB;IACrBA,CAAC,CAACC,cAAF;IAEA,MAAMC,GAAG,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBC,SAAlB,CAA4BC,KAAxC;IACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,GAArB,EAA0BF,CAA1B;IACAN,aAAa,CAACQ,GAAD,CAAb;EACH,CAZY,CAcb;EACA;;;EACA,SAASO,KAAT,CAAeC,IAAf,EAAqB;IACjB,MAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;MACtCC,UAAU,CAAC,MAAMF,GAAG,EAAV,EAAcH,IAAd,CAAV;IACH,CAFe,CAAhB;IAGA,OAAOC,OAAP;EACH;;EACD,eAAeK,YAAf,CAA4BC,UAA5B,EAAwC;IACpC,MAAMR,KAAK,CAAC,IAAD,CAAX;IACA,MAAMS,GAAG,GAAI,yCAAwCD,UAAW,EAAhE;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;IACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAf,OAAO,CAACC,GAAR,CAAYa,IAAZ,EAAkB,MAAlB;IACAzB,WAAW,CAACyB,IAAD,CAAX;EACH;;EAED9B,SAAS,CAAC,MAAM;IAEZ,CAAC,YAAY;MACTO,UAAU,CAAC,IAAD,CAAV;MACA,MAAMkB,YAAY,CAACvB,UAAD,CAAlB,CAFS,CAEsB;;MAC/BK,UAAU,CAAC,KAAD,CAAV;IACH,CAJD;EAMH,CARQ,EAQN,CAACL,UAAD,CARM,CAAT;;EAUA,SAAS8B,aAAT,GAAyB;IACrB,OAAO5B,QAAQ,KAAIA,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAE6B,GAAV,CAAcC,OAAO,IAAI;MACxC,oBACI;QAAA,wBACI;UAAA,qBAAYA,OAAO,CAACC,IAAR,CAAaC,IAAzB;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,wBAAeF,OAAO,CAACC,IAAR,CAAaE,OAA5B;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA,gBADJ;IAMH,CAPkB,CAAJ,CAAf;EAQH;;EAED,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI;MAAM,QAAQ,EAAE7B,YAAhB;MAAA,wBACI;QAAO,IAAI,EAAC,WAAZ;QAAwB,IAAI,EAAE,MAA9B;QAAsC,WAAW,EAAC;MAAlD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EASK,CAACF,OAAD,iBAAW;MAAA,UAAM0B,aAAa,GAAGM,MAAhB,GAAyBN,aAAa,EAAtC,gBAA2C;QAAA;MAAA;IAAjD;MAAA;MAAA;MAAA;IAAA,QAThB,EAUK1B,OAAO,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVhB;EAAA,gBADJ;AAcD;;GAlEQL,G;;KAAAA,G;AAoET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}