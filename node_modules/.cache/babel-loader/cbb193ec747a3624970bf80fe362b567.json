{"ast":null,"code":"var _jsxFileName = \"/Users/ovaishk/Programming/React Project/Movie Explorer/src/Components/Show/Show.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Show(props) {\n  _s();\n\n  const [actorShows, setActorShows] = useState(false);\n  const {\n    filter,\n    showList,\n    setShowList\n  } = props;\n  console.log(showList);\n  let noImage = \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\";\n\n  async function showsOfActor(actor) {\n    const url = `https://api.tvmaze.com/people/${actor}/castcredits?embed=show`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    setActorShows(true);\n    setShowList(data);\n  } // console.log(show)\n\n\n  if (showList.length === 0) {\n    // Displaying shows after clicking on actor\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  } else if (actorShows === true) {\n    // Displaying shows after clicking on actor\n    return showList && (showList === null || showList === void 0 ? void 0 : showList.map(showObj => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shows\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: showObj._embedded.show.image === null ? noImage : showObj._embedded.show.image.original,\n            alt: \"poster\",\n            className: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"showInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: showObj._embedded.show.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Language : \", showObj._embedded.show.language]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, showObj, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }));\n  } else if (filter === \"shows\") {\n    //Displaying shows\n    return showList && (showList === null || showList === void 0 ? void 0 : showList.map(showObj => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shows\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: showObj.show.image === null ? noImage : showObj.show.image.original,\n            alt: \"poster\",\n            className: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"showInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: showObj.show.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Language : \", showObj.show.language]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, showObj, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }));\n  } else {\n    return (//displaying actors\n      showList && (showList === null || showList === void 0 ? void 0 : showList.map(showObj => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shows\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => showsOfActor(showObj.person.id),\n              src: showObj.person.image === null ? noImage : showObj.person.image.original,\n              alt: \"poster\",\n              className: \"image actors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"showInfo\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: showObj.person.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, showObj, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      }))\n    );\n  }\n}\n\n_s(Show, \"+4x+77yU6OOLwjY/W6tZ/i4sk2s=\");\n\n_c = Show;\nexport default Show;\n\nvar _c;\n\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"names":["React","useState","Show","props","actorShows","setActorShows","filter","showList","setShowList","console","log","noImage","showsOfActor","actor","url","response","fetch","data","json","length","map","showObj","_embedded","show","image","original","name","language","person","id"],"sources":["/Users/ovaishk/Programming/React Project/Movie Explorer/src/Components/Show/Show.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Show(props) {\n  const [actorShows, setActorShows] = useState(false);\n  const { filter, showList, setShowList } = props;\n  console.log(showList);\n  let noImage =\n    \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\";\n\n  async function showsOfActor(actor) {\n    const url = `https://api.tvmaze.com/people/${actor}/castcredits?embed=show`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    setActorShows(true);\n    setShowList(data);\n  }\n\n  // console.log(show)\n\n  if(showList.length === 0) {           // Displaying shows after clicking on actor\n    return (\n      <h1>Not found</h1>\n    );\n  } else if(actorShows === true) {           // Displaying shows after clicking on actor\n    return (\n      showList &&\n      showList?.map((showObj) => {\n        return (\n          <>\n            <div className=\"shows\" key={showObj}>\n              <img\n                src={\n                  showObj._embedded.show.image === null\n                    ? noImage\n                    : showObj._embedded.show.image.original\n                }\n                alt=\"poster\"\n                className=\"image\"\n              />\n              <div className=\"showInfo\">\n                <h3>{showObj._embedded.show.name}</h3>\n                <h4>Language : {showObj._embedded.show.language}</h4>\n              </div>\n            </div>\n          </>\n        );\n      })\n    );\n  } else if (filter === \"shows\") {        //Displaying shows\n    return (\n      showList &&\n      showList?.map((showObj) => {\n        return (\n          <>\n            <div className=\"shows\" key={showObj}>\n              <img\n                src={\n                  showObj.show.image === null\n                    ? noImage\n                    : showObj.show.image.original\n                }\n                alt=\"poster\"\n                className=\"image\"\n              />\n              <div className=\"showInfo\">\n                <h3>{showObj.show.name}</h3>\n                <h4>Language : {showObj.show.language}</h4>\n              </div>\n            </div>\n          </>\n        );\n      })\n    );\n  } else {\n    return (                //displaying actors\n      showList &&\n      showList?.map((showObj) => {\n        return (\n          <>\n            <div className=\"shows\" key={showObj}>\n              <img\n                onClick={() => showsOfActor(showObj.person.id)}\n                src={\n                  showObj.person.image === null\n                    ? noImage\n                    : showObj.person.image.original\n                }\n                alt=\"poster\"\n                className=\"image actors\"\n              />\n              <div className=\"showInfo\">\n                <h3>{showObj.person.name}</h3>\n              </div>\n            </div>\n          </>\n        );\n      })\n    );\n  }\n}\n\nexport default Show;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}